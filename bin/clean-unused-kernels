#!/usr/bin/python3

import os
import re
import subprocess
from tempfile import TemporaryFile

version_matcher = re.compile('linux-image-(\d+[\d.-]+\d+).*')


def get_kernel_version(package):
    m = version_matcher.match(package)
    if m:
        version = m.groups()[0]
    else:
        version = None
    return version


def get_installed_kernel_versions():
    cmd = 'dpkg --get-selections | grep "\sinstall" | grep "^linux-image-" | cut -f 1'
    packages = subprocess.check_output(cmd, shell=True).decode().splitlines()
    kernel_versions = set()
    for p in packages:
        v = get_kernel_version(p)
        if v:
            kernel_versions.add(v)
    return frozenset(kernel_versions)


def get_installed_kernel_packages(versions):
    kernel_packages = set()
    for v in versions:
        cmd = 'dpkg --get-selections | grep "\sinstall" | grep "{}" | cut -f 1'.format(v)
        packages = subprocess.check_output(cmd, shell=True).decode().splitlines()
        kernel_packages.update(packages)
    return frozenset(kernel_packages)


KERNEL_VERSIONS = get_installed_kernel_versions()
KERNEL_PACKAGES = get_installed_kernel_packages(KERNEL_VERSIONS)


def select_version(version_set):
    d = {k: v for k, v in enumerate(sorted(list(version_set), reverse=True), start=1)}
    for i, v in d.items():
        print("({}) {}".format(i, v))
    ch = input('Select version to keep by number[1]: ') or '1'
    return d.get(int(ch))


def get_keep_remove_list(version, packages):
    keep = set()
    remove = set()
    for p in packages:
        if version in p:
            keep.add(p)
        else:
            remove.add(p)
    return sorted(list(keep)), sorted(list(remove))


def copy_to_system_clipboard(data):
    t = TemporaryFile(mode='wt')
    t.write(data)
    t.seek(os.SEEK_SET)
    subprocess.call(['xclip', '-selection', 'clipboard'], stdin=t)


def can_copy_to_system_clipboard():
    try:
        return subprocess.call(['xclip', '-o'], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL) == 0
    except FileNotFoundError:
        return False


def print_command_and_copy(keep, remove):
    print('Keep these packages:')
    for p in keep:
        print('  ', p)
    print('Remove these packages:')
    for p in remove:
        print('  ', p)
    print('\nGenerated command')
    cmd = 'sudo apt -y remove {}'.format(' '.join(remove))
    print(cmd)
    if can_copy_to_system_clipboard():
        copy_to_system_clipboard(cmd)


def main():
    if len(KERNEL_VERSIONS) == 0:
        print("Can't find kernel packages")
        exit(1)
    if len(KERNEL_VERSIONS) == 1:
        print('You have only one kernel version')
        exit(1)
    selected_version = select_version(KERNEL_VERSIONS)
    keep, remove = get_keep_remove_list(selected_version, KERNEL_PACKAGES)
    print_command_and_copy(keep, remove)


if __name__ == '__main__':
    main()
